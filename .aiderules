<rules>
    <rule>
        <name>POWERSHELL_COMMANDS</name>
        <content>ALWAYS USE FULL CMDLET NAMES RATHER THAN ALIAS NAMES.</content>
    </rule>
    <rule>
        <name>CONSOLIDATION_CONSIDERATIONS</name>
        <content>WHEN CONSOLIDATING CODE, ENSURE YOU CLEAN UP ANY CODE OR FILES THAT IS NO LONGER NEEDED.</content>
    </rule>
    <rule>
        <name>EDIT_TOOL_CONSIDERATIONS</name>
        <content>READ THE FILE YOU JUST CHANGED TO ENSURE THE CHANGED APPLIED CORRECTLY.</content>
    </rule>
    <rule>
        <name>REQUEST_SCOPE</name>
        <content>DO NOT MAKE CHANGES OUTSIDE THE REQUESTED SCOPE</content>
    </rule>
    <rule>
        <name>DOUBLE_CHECK_WORKING</name>
        <content>ALWAYS DOUBLE CHECK YOUR WORK TO ENSURE CODE HAS BEEN APPLIED CORRECTLY AND TO ENSURE THAT YOUR CHANGES FOLLOW THE RULE 'CHANGE_CONSIDERATION'.</content>
    </rule>
    <rule>
        <name>CHANGE_CONSIDERATION</name>
        <content>DO NOT BREAK ANY CURRENT WORKING FUNCTIONALITY THAT WERE NOT REQUESTED</content>
    </rule>
    <rule>
        <name>UI_UX_CONSIDERATION</name>
        <content>DO NOT MAKE UI / UX CHANGES THAT WERE NOT REQUESTED</content>
    </rule>
    <rule>
        <name>MODULAR CODE APPROACH</name>
        <content>ENSURE THAT WHEN WRITING CODE WE FOCUS ON USING IMPORTS WHERE RELEVANT / NECASSARY TO KEEP OUR CODEBASE MODULAR AND EASY TO MANAGE / SCALE / EDIT. SO FOR EXAMPLE USE ONE FILE FOR A SINGLE FUNCTION ETC.</content>
    </rule>
    <rule>
        <name>AVOIDING_ASSUMPTIONS</name>
        <bulletpoint1>AVOID ASSUMING ASSUMING SOMETHING ISNT WORKING WHEN YOU RUN A COMMAND IN THE TERMINAL UNLESS YOU SPECIFICALLY SEE AN ERROR MESSAGE.</bulletpoint1>
        <bulletpoint2>ALLOW THE USER TO TEST YOUR CHANGES ONCE YOU ARE DONE MAKING CHANGES. REFRAIN FROM ASSUMING SOMETHING ISNT WORKING JUST BECAUSE YOU RAN IT. YOU HAVE NO VISION CAPABILITIES.</bulletpoint2>
    </rule>
</rules>